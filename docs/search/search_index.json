{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Jinja2 Templates with bareASGI \u00b6 Jinja2 template support for bareASGI .","title":"Jinja2 Templates with bareASGI"},{"location":"#jinja2-templates-with-bareasgi","text":"Jinja2 template support for bareASGI .","title":"Jinja2 Templates with bareASGI"},{"location":"api/bareasgi_jinja2/","text":"API \u00b6 function bareasgi_jinja2 . add_jinja2 \u00b6 Summary \u00b6 Adds jinja2 support ro bareASGI. bareasgi_jinja2 . add_jinja2 ( app : Application , env : jinja2.Environment , info_key : Optional[str] ) Parameters \u00b6 app : Application (optional) The bareASGI Application. env : jinja2.Environment (optional) The jinja2 Environment info_key : Optional[str] An optional key to overide the key in the supplied info dict where the jinja2 Environment is held. Defaults to None. Returns \u00b6 Any : Description \u00b6 This helper function can be used as follows: app = Application () env = jinja2 . Environment ( loader = jinja2 . FileSystemLoader ( '/path/to/templates' )), autoescape = jinja2 . select_autoescape ([ 'html' , 'xml' ]), enable_async = True ) add_jinja2 ( app , env ) function bareasgi_jinja2 . template \u00b6 Summary \u00b6 Registers a jinja2 template callback. bareasgi_jinja2 . template ( template_name : str , status : int , encoding : str , info_key : Optional[str] ) Parameters \u00b6 template_name : str (optional) The name of the template. status : int The OK status. Defaults to 200. encoding : str The encdoing used for generating the body.. Defaults to 'utf-8'. info_key : Optional[str] An optional key to overide the key in the supplied info dict where the jinja2 Environment is held. Defaults to None. Returns \u00b6 HttpTemplateResponse : The decorated function Description \u00b6 For example: @template ( 'example1.html' ) async def http_request_handler ( scope , info , matches , content ): return { 'name' : 'rob' }","title":"bareasgi_jinja2"},{"location":"api/bareasgi_jinja2/#api","text":"","title":"API"},{"location":"api/bareasgi_jinja2/#function-bareasgi_jinja2add_jinja2","text":"","title":"function bareasgi_jinja2.add_jinja2"},{"location":"api/bareasgi_jinja2/#summary","text":"Adds jinja2 support ro bareASGI. bareasgi_jinja2 . add_jinja2 ( app : Application , env : jinja2.Environment , info_key : Optional[str] )","title":"Summary"},{"location":"api/bareasgi_jinja2/#parameters","text":"app : Application (optional) The bareASGI Application. env : jinja2.Environment (optional) The jinja2 Environment info_key : Optional[str] An optional key to overide the key in the supplied info dict where the jinja2 Environment is held. Defaults to None.","title":"Parameters"},{"location":"api/bareasgi_jinja2/#returns","text":"Any :","title":"Returns"},{"location":"api/bareasgi_jinja2/#description","text":"This helper function can be used as follows: app = Application () env = jinja2 . Environment ( loader = jinja2 . FileSystemLoader ( '/path/to/templates' )), autoescape = jinja2 . select_autoescape ([ 'html' , 'xml' ]), enable_async = True ) add_jinja2 ( app , env )","title":"Description"},{"location":"api/bareasgi_jinja2/#function-bareasgi_jinja2template","text":"","title":"function bareasgi_jinja2.template"},{"location":"api/bareasgi_jinja2/#summary_1","text":"Registers a jinja2 template callback. bareasgi_jinja2 . template ( template_name : str , status : int , encoding : str , info_key : Optional[str] )","title":"Summary"},{"location":"api/bareasgi_jinja2/#parameters_1","text":"template_name : str (optional) The name of the template. status : int The OK status. Defaults to 200. encoding : str The encdoing used for generating the body.. Defaults to 'utf-8'. info_key : Optional[str] An optional key to overide the key in the supplied info dict where the jinja2 Environment is held. Defaults to None.","title":"Parameters"},{"location":"api/bareasgi_jinja2/#returns_1","text":"HttpTemplateResponse : The decorated function","title":"Returns"},{"location":"api/bareasgi_jinja2/#description_1","text":"For example: @template ( 'example1.html' ) async def http_request_handler ( scope , info , matches , content ): return { 'name' : 'rob' }","title":"Description"},{"location":"user-guide/installation/","text":"Installation \u00b6 The package can be installed with pip. pip install bareasgi-jinja2 This is a Python 3.7 and later package with dependencies on: bareASGI jinja2 <http://jinja.pocoo.org> _","title":"Installation"},{"location":"user-guide/installation/#installation","text":"The package can be installed with pip. pip install bareasgi-jinja2 This is a Python 3.7 and later package with dependencies on: bareASGI jinja2 <http://jinja.pocoo.org> _","title":"Installation"},{"location":"user-guide/usage/","text":"Usage \u00b6 A utility function add_jinja2 is provided. from typing import Mapping , Any import jinja2 import os.path import uvicorn from bareasgi import Application import bareasgi_jinja2 here = os . path . abspath ( os . path . dirname ( __file__ )) @bareasgi_jinja2.template ( 'example1.html' ) async def http_request_handler ( scope , info , matches , content ): return { 'name' : 'rob' } app = Application () env = jinja2 . Environment ( loader = jinja2 . FileSystemLoader ( os . path . join ( here , 'templates' )), autoescape = jinja2 . select_autoescape ([ 'html' , 'xml' ]), enable_async = True ) bareasgi_jinja2 . add_jinja2 ( app , env ) app . http_router . add ({ 'GET' }, '/example1' , http_request_handler ) uvicorn . run ( app , port = 9010 )","title":"Usage"},{"location":"user-guide/usage/#usage","text":"A utility function add_jinja2 is provided. from typing import Mapping , Any import jinja2 import os.path import uvicorn from bareasgi import Application import bareasgi_jinja2 here = os . path . abspath ( os . path . dirname ( __file__ )) @bareasgi_jinja2.template ( 'example1.html' ) async def http_request_handler ( scope , info , matches , content ): return { 'name' : 'rob' } app = Application () env = jinja2 . Environment ( loader = jinja2 . FileSystemLoader ( os . path . join ( here , 'templates' )), autoescape = jinja2 . select_autoescape ([ 'html' , 'xml' ]), enable_async = True ) bareasgi_jinja2 . add_jinja2 ( app , env ) app . http_router . add ({ 'GET' }, '/example1' , http_request_handler ) uvicorn . run ( app , port = 9010 )","title":"Usage"}]}